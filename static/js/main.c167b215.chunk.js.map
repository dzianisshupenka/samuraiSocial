{"version":3,"sources":["redux/dialogReducer.js","components/Music/Music.module.css","img/Spinner-1.4s-137px.svg","img/draniki.png","api/api.js","serviceWorker.js","components/SideBar/Friends/Friend/Friend.jsx","components/SideBar/Friends/Friends.jsx","components/SideBar/SideBar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/common/paginator/Paginator.jsx","components/Users/User.jsx","utils/objectHelper.js","redux/usersReducer.js","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/login/Login.jsx","redux/appReducer.js","redux/reduxStore.js","hoc/WithSuspense.js","App.js","index.js","components/SideBar/SideBar.module.css","components/common/controls/FormControl.js","components/common/controls/FormControl.module.css","components/Users/user.module.css","components/common/paginator/paginator.module.css","components/common/Preloader.jsx","utils/validators/validator.js","components/Header/Header.module.css","components/SideBar/Friends/Friends.module.css","components/SideBar/Friends/Friend/Friend.module.css","hoc/WithAuthRedirect.js","redux/profileReducer.js","img/31nxvlzm90L._SY450_.jpg"],"names":["initialState","messageItemData","id","name","img","messageData","message","class","sendMessage","type","dialogReducer","state","action","newMessage","module","exports","instance","axios","withCredentials","baseURL","headers","params","setUserProfiler","userId","get","then","response","data","setAuth","me","login","email","password","rememberMe","post","logout","delete","getUsers","currentPage","pageSize","userStatus","getUserStatus","updateUserStatus","status","put","followApi","unfollowUser","followUser","Boolean","window","location","hostname","match","Friend","className","friend","item","alt","src","Friends","friends","Nav","side","bar","to","activeClassName","active","News","Music","music","text","Settings","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","style","btn","onClick","filter","p","map","page","selected","Users","props","wrap","totalUsersCount","users","u","key","main","user","photos","small","photo","followed","disabled","followingProgres","some","unfollow","follow","info","updateObjectInArray","items","itemId","objPropName","newObjProps","isFetching","setCurrentPage","toogleIsFetching","toogleFollowingProgress","folowUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","totalCount","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingProgress","UsersCc","pageNumber","getUsersThunk","this","Preloader","User","unfollowThunk","followThunk","React","Component","compose","connect","bind","WithAuthRedirect","Header","header","logo","auth","isAuth","logoutThunk","setAuthUserData","setAuthThunk","authReducer","HeaderContainer","loginStyle","backgroundColor","width","margin","buttonStyle","maxLength","maxLengthCreator","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","createField","Input","required","error","commonError","loginThunk","messages","stopSubmit","_error","formData","initialize","appReducer","reducers","combineReducers","profilePage","profileReducer","messagePage","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleWare","WithSuspense","fallback","ProfileContainer","lazy","MessagesContainer","App","initializeThunk","path","render","UsersContainer","component","AppContainer","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","hasError","touched","formControl","validators","placeholder","validate","preloader","value","length","RedirectComponent","userProfile","postData","likesCount","addPost","newPostItem","setStatus","setProfileThunk","getStatusThunk","updateStatusThunk","newPost"],"mappings":"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","file":"static/js/main.c167b215.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    messageItemData: [\r\n        {id: 1, name: 'Pavel', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'},\r\n        {id: 2, name: 'Ricky', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'},\r\n        {id: 3, name: 'Tom', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'},\r\n        {id: 4, name: 'Marcus', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'},\r\n        {id: 5, name: 'Katy', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'},\r\n        {id: 6, name: 'Nick', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'},\r\n        {id: 7, name: 'Bold', img: '\"https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg\"'}\r\n    ],\r\n    messageData: [\r\n        {id: 1, message: 'How are you?', class: 'friend'},\r\n        {id: 2, message: 'Whats happen?', class: 'me'},\r\n        {id: 3, message: 'Ou eee!!', class: 'friend'},\r\n        {id: 4, message: 'Ou eeeeeee!!', class: 'me'},\r\n        {id: 5, message: 'Ou eeeeeeeeeeeee!!', class: 'me'},\r\n        {id: 6, message: 'ee maka faka', class: 'friend'}\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case SEND_MESSAGE : \r\n            let newMessage = {\r\n                id: 7,\r\n                message: action.message,\r\n                class: 'me'\r\n            }\r\n            return {...state,\r\n                         messageData: [...state.messageData, newMessage]};\r\n        \r\n        default : \r\n        return state;\r\n    }\r\n    \r\n}\r\n\r\nexport const sendMessage = (message) => {\r\n    return { type: SEND_MESSAGE, message }\r\n}\r\n\r\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Music_text__2FJRR\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner-1.4s-137px.d1736f9b.svg\";","module.exports = __webpack_public_path__ + \"static/media/draniki.ae7f2558.png\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'c324e420-1ebb-4e65-bf90-1a7257900f46'\r\n      },\r\n    params: {}\r\n});\r\n\r\nexport const setUserProfiler = (userId) => {\r\n    return instance\r\n            .get(`profile/` + userId)\r\n            .then(response => {\r\n            return response.data;\r\n            });\r\n}\r\n\r\nexport const setAuth = {\r\n    me () {\r\n        return instance.get(`auth/me`).then(response => {\r\n        return response.data;\r\n        });\r\n    },\r\n    login (email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout () {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getUsers = (currentPage = 1, pageSize = 50) => {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n}\r\n\r\nexport const userStatus = {\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n        \r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status })\r\n    }\r\n}\r\n\r\nconst followApi = {\r\n    unfollowUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n                    .then(response => {\r\n                        return response.data;\r\n                    })\r\n    },\r\n    followUser (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n                    .then(response => {\r\n                        return response.data;\r\n                    })\r\n    }\r\n}\r\n\r\n export default followApi;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport friend from './Friend.module.css';\r\n\r\nconst Friend = () => {\r\n    return (\r\n        <div className={friend.item}><img className={friend.img} alt='friend' src='https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg'/>\r\n            My friend\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport friends from './Friends.module.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Friends = () => {\r\n    return (\r\n        <div className={friends.friends}>\r\n            <div>\r\n                Friends\r\n            </div>\r\n            <div className={friends.item}>\r\n                <Friend />\r\n                <Friend />\r\n                <Friend />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Friends;","import React from 'react';\r\nimport side from'./SideBar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\n\r\nconst Nav = () => {\r\n    return(      \r\n    <nav className={side.bar}>\r\n      <div>\r\n        <NavLink to='/profile' activeClassName={side.active}>Profile</NavLink>          \r\n      </div>\r\n      <div>\r\n        <NavLink to='/users' activeClassName={side.active}>Users</NavLink>          \r\n      </div>\r\n      <div>\r\n        <NavLink to='/messages' activeClassName={side.active}>Messages</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to='/news' activeClassName={side.active}>News</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to='music' activeClassName={side.active}>Music</NavLink>\r\n      </div>\r\n      <div>\r\n        <NavLink to='settings' activeClassName={side.active}>Settings</NavLink>\r\n      </div>\r\n      <Friends />\r\n      {/* <div className={side.friend}>\r\n        <NavLink to='friends' activeClassName={side.active} className={side.friends}>Friends</NavLink>\r\n      </div> */}\r\n    </nav>)\r\n}\r\nexport default Nav;","import React from 'react';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\nexport default News;","import React from 'react';\r\nimport music from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return(\r\n        <div className={music.text}>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\nexport default Music;","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return(\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React, { useState } from 'react';\r\nimport style from './paginator.module.css';\r\n\r\nexport let Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize=15}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize) ;\r\n    let pages = [];\r\n    for(let i=1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1)*portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber*portionSize;\r\n\r\n    return (\r\n        <div className={style.pages}>\r\n        {portionNumber > 1 && \r\n        <button className={style.btn} onClick={ () => {setPortionNumber(portionNumber -1)} }>prev</button>}\r\n        {pages\r\n        .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n        .map(p => (\r\n            <span className={`${style.page} ${currentPage === p && style.selected}`}\r\n            onClick={ () => {onPageChanged(p)}}>{p}</span>\r\n        ))}\r\n        {portionCount > portionNumber && \r\n        <button  className={style.btn} onClick={ () => {setPortionNumber(portionNumber + 1)} } >next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport style from './user.module.css';\r\nimport photo from '../../img/31nxvlzm90L._SY450_.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Paginator } from '../common/paginator/Paginator';\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n        return (\r\n          <div className={style.wrap}>\r\n            <Paginator totalItemsCount={props.totalUsersCount} \r\n                       pageSize={props.pageSize} \r\n                       onPageChanged={props.onPageChanged}  \r\n                       currentPage={props.currentPage}/>\r\n            {props.users.map(u => (\r\n              <div key={u.id} className={style.main}>\r\n                <div className={style.user}>\r\n                  <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                      <img src={u.photos.small != null ? u.photos.small : photo}\r\n                      alt=\"avatar\" />\r\n                    </NavLink>\r\n                    \r\n                  </div>\r\n                  <div>\r\n                    {u.followed ? (<button disabled={props.followingProgres.some(id => id === u.id)} onClick={() => {\r\n                      props.unfollow(u.id);\r\n                      }\r\n                    }>unfollow</button>) : (\r\n                      <button disabled={props.followingProgres.some(id => id === u.id)} onClick={() => {\r\n                        props.follow(u.id);\r\n                        }}> follow </button>)}\r\n                  </div>\r\n                </div>\r\n                <div className={style.info}>\r\n                  <div>{u.name}</div>\r\n                  <div>{u.status != null ? u.status : u.id}</div>\r\n                </div>\r\n                <div className={style.location}>\r\n                  <div>'u.location.city'</div>\r\n                  <div>'u.location.country'</div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n} \r\nexport default Users","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) { return {...u, ...newObjProps}}\r\n        return u;\r\n    })\r\n}\r\n","import { getUsers } from '../api/api';\r\nimport followApi from '../api/api';\r\nimport { updateObjectInArray } from '../utils/objectHelper';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USER_COUNT = 'SET_TOTAL_USER_COUNT';\r\nconst TOOGLE_IS_FETCHING = 'TOOGLE_IS_FETCHING';\r\nconst TOOGLE_IS_FOLOWING_PROGRESS = 'TOOGLE_IS_FOLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingProgres: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {...state, \r\n                    users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return { ...state, users: action.users }\r\n        case SET_CURRENT_PAGE:\r\n            return { ...state, currentPage: action.currentPage }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        case TOOGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case TOOGLE_IS_FOLOWING_PROGRESS:\r\n            return{...state, \r\n                followingProgres: action.followingProgres \r\n                ? [...state.followingProgres, action.userId]\r\n                : state.followingProgres.filter(id => id !== action.userId)}\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalCount) => ({type: SET_TOTAL_USER_COUNT, totalCount});\r\nexport const toogleIsFetching = (isFetching) => ({type: TOOGLE_IS_FETCHING, isFetching});\r\nexport const toogleFollowingProgress = (followingProgres, userId) => ({type: TOOGLE_IS_FOLOWING_PROGRESS, followingProgres, userId});\r\n\r\nexport const getUsersThunk = (currentPage, pageSize) => { \r\n    return async (dispatch) => {\r\n    dispatch(toogleIsFetching(true));\r\n    let data = await getUsers(currentPage, pageSize);   \r\n    dispatch(setCurrentPage(currentPage));\r\n    dispatch(toogleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\nconst folowUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toogleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId);\r\n        if(data.resultCode === 0) {\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toogleFollowingProgress(false, userId));\r\n    }\r\n\r\nexport const followThunk = (userId) => {\r\n    return async (dispatch) => {\r\n        folowUnfollowFlow(dispatch, userId, followApi.followUser.bind(followApi), follow);\r\n    }\r\n}\r\n\r\nexport const unfollowThunk = (userId) => {\r\n    return async (dispatch) => {\r\n        folowUnfollowFlow(dispatch, userId, followApi.unfollowUser.bind(followApi), unfollow);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n} \r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgres;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Users from './User';\r\nimport { getUsersThunk, followThunk, unfollowThunk } from '../../redux/usersReducer';\r\nimport Preloader from '../common/Preloader';\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingProgress } from '../../redux/usersSelectors';\r\n\r\nclass UsersCc extends React.Component {\r\n\r\n  componentDidMount() {\r\n\r\n    this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\r\n        }\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount = {this.props.totalUsersCount}\r\n                    pageSize = {this.props.pageSize}\r\n                    currentPage ={this.props.currentPage}\r\n                    onPageChanged={this.onPageChanged}\r\n                    users={this.props.users}\r\n                    unfollow={this.props.unfollowThunk}\r\n                    follow={this.props.followThunk} \r\n                    followingProgres={this.props.followingProgres}\r\n\r\n                    />\r\n            </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingProgres: getFollowingProgress(state)\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {getUsersThunk, followThunk, unfollowThunk }),\r\n  WithAuthRedirect\r\n)(UsersCc)","import React from 'react';\r\nimport header from'./Header.module.css';\r\nimport logo from '../../img/draniki.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n\r\n    <header className={header.header}>\r\n      <img src={logo} alt='logo' />\r\n      <div className={header.login}>\r\n        {props.auth.isAuth ? \r\n        <div>{props.auth.login} {props.auth.email} <button className={header.logout} onClick={props.logoutThunk}>logout</button></div>  :\r\n        <NavLink to='/login' >Login</NavLink>}\r\n        \r\n      </div>\r\n    </header>)\r\n}\r\nexport default Header;","import { setAuth } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USER_DATA: \r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, data: {userId, email, login, isAuth}});\r\n\r\nexport const setAuthThunk = () => async (dispatch) => {\r\n           \r\n    let data = await setAuth.me();\r\n    if(data.resultCode === 0) {\r\n        let {id, login, email} = data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\n\r\nexport const loginThunk = (email, password, rememberMe) => async (dispatch) => {\r\n   \r\n    let response = await setAuth.login(email, password, rememberMe);\r\n    \r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setAuthThunk());\r\n    } else {\r\n        let message = response.data.messages[0];\r\n        dispatch(stopSubmit('login', {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n    \r\n    let response = await setAuth.logout();\r\n\r\n    if(response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logoutThunk} from './../../redux/authReducer.js';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n   \r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({auth: state.auth })\r\n\r\nexport default connect(mapStateToProps, {logoutThunk})(HeaderContainer) ;","import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { Input, createField } from '../common/controls/FormControl';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validator';\r\nimport { connect } from 'react-redux';\r\nimport { loginThunk } from './../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from './../../components/common/controls/FormControl.module.css';\r\n\r\nlet loginStyle = {\r\n    backgroundColor: \"rgba(256, 256, 256, 0.5)\",\r\n    width: \"250px\",\r\n    margin: \"5px\"\r\n}\r\n\r\nlet buttonStyle = {\r\n    margin: \"5px\"\r\n}\r\n\r\nconst maxLength = maxLengthCreator(25);\r\n\r\nconst LoginForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            {createField(Input, [required, maxLength], 'login', loginStyle, 'login')}\r\n            {createField(Input, [required, maxLength], 'password', loginStyle, 'password')}\r\n            {createField(Input, null, 'rememberMe', null, null, {type: \"checkbox\"}, 'remember me')}\r\n            {props.error && <div className={style.commonError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button style = {buttonStyle}>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n  })(LoginForm)\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit =  (formData) => {\r\n        props.loginThunk(formData.login, formData.password, formData.rememberMe);      \r\n    }\r\n\r\n    if(props.isAuth)  {\r\n        return <Redirect to='/profile' />\r\n    }\r\n    \r\n    return <div>\r\n        <h1>Please, log in</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({isAuth : state.auth.isAuth})\r\n\r\nexport default connect(mapStateToProps, {loginThunk})(Login);","import { setAuthThunk } from \"./authReducer\";\r\n\r\nconst INITIALIZE_SUCCESS = 'INITIALIZE_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialize: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialize: true\r\n            }\r\n        default :\r\n        return state;\r\n    }\r\n}\r\n\r\nexport const initializeSuccess = () => ({type: INITIALIZE_SUCCESS});\r\n\r\nexport const initializeThunk = () => (dispatch) => {\r\n    let promise = dispatch(setAuthThunk());\r\n    promise.then(() => {\r\n        dispatch(initializeSuccess());\r\n    })\r\n}\r\n\r\nexport default appReducer;","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleWare from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage: profileReducer,\r\n    messagePage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleWare)));\r\n\r\n//window.store = store;\r\n\r\nexport default store;","import React, {Suspense} from 'react';\r\n\r\nexport const WithSuspense = (Component) => {\r\n        return (props) => {\r\n             return <Suspense fallback = {<div> loading... </div>}>\r\n                        <Component {...props} />\r\n                    </Suspense> }\r\n        }","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/SideBar/SideBar';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, BrowserRouter, HashRouter } from 'react-router-dom';\n//import MessagesContainer from './components/Messages/MessagesContainer';\nimport UsersContainer from './components/Users/UsersContainer';\n//import ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeThunk } from './redux/appReducer';\nimport Preloader from './components/common/Preloader';\nimport store from './redux/reduxStore';\nimport { WithSuspense } from './hoc/WithSuspense';\n\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.initializeThunk();\n}\n  render() {\n    if(!this.props.initialize) {\n      return <Preloader />;\n    }\n    \n    return (\n          <div className='app-wrapper'>\n            <HeaderContainer />\n            <Nav />\n            <div className='app-wrapper-content'>\n              <Route path='/profile/:userId?' render= {WithSuspense(ProfileContainer)} /> \n              <Route path='/messages' render={WithSuspense(MessagesContainer)}/>\n              <Route path='/users' render={() => <UsersContainer />}/>\n              <Route path='/news' component={News}/>\n              <Route path='/music' component={Music}/>\n              <Route path='/settings' component={Settings}/>\n              <Route path='/login' render={() => <Login />} />\n            </div>\n          </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({initialize: state.app.initialize})\n\nlet AppContainer = connect(mapStateToProps, {initializeThunk})(App);\n\nconst SamuraiJSApp = (props) => {\n  return <HashRouter >\n        <Provider store={store}>\n                <AppContainer />\n        </Provider>              \n  </HashRouter>\n}\n\nexport default SamuraiJSApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport SamuraiJSApp from './App';\n\n\n\nReactDOM.render(<SamuraiJSApp /> , document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"SideBar_bar__2BKa8\",\"active\":\"SideBar_active__3E7Wi\",\"friends\":\"SideBar_friends__2Yhuk\",\"friend\":\"SideBar_friend__2cSnu\"};","import React from 'react';\r\nimport style from './FormControl.module.css';\r\nimport { Field } from 'redux-form';\r\n\r\nexport const Textarea = ({input, meta , ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n            <textarea  {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta , ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={style.formControl + ' ' + (hasError ? style.error : '')} >\r\n            <input  {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (component, validators, name, style, placeholder, props = {}, text = '') => (\r\n    <div>\r\n        <Field  component={component} \r\n                validate={validators} \r\n                name={name} \r\n                style = {style} \r\n                placeholder={placeholder}\r\n                {...props}/> {text}\r\n    </div>\r\n)","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControl_formControl__2HvUk\",\"error\":\"FormControl_error__2ixWS\",\"commonError\":\"FormControl_commonError__3C98f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"user_main__2wdQL\",\"info\":\"user_info__3uwkz\",\"location\":\"user_location__s-RD8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"paginator_pages__1RDNi\",\"page\":\"paginator_page__2vIqZ\",\"selected\":\"paginator_selected__2RaAg\",\"btn\":\"paginator_btn__1EJFZ\"};","import React from 'react';\r\nimport preloader from '../../img/Spinner-1.4s-137px.svg';\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img alt='loading' src={preloader}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n\r\n    return undefined;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3I2Tk\",\"login\":\"Header_login__3-XoT\",\"logout\":\"Header_logout__3UYaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__MCQN0\",\"item\":\"Friends_item__3sI6b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Friend_img__1d4oP\",\"item\":\"Friend_item__5Uo-O\"};","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n    let mapStateToPropsForRedirect = (state) => ({auth: state.auth.isAuth});\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.auth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let authProfieContainer = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return authProfieContainer;\r\n}\r\n","import {setUserProfiler, userStatus} from '../api/api';\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    userProfile: null,\r\n    postData: [\r\n        {id: 1, post: 'First post', likesCount: 13},\r\n        {id: 2, post: 'Second post', likesCount: 3},\r\n        {id: 3, post: 'Third post', likesCount: 1},\r\n        ],\r\n    status: 'set status'\r\n    }\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case ADD_POST: \r\n            let newPost = {\r\n                id: 4,\r\n                post: action.newPostItem,\r\n                likesCount: 0\r\n            }\r\n            return {...state,\r\n                        postData: [...state.postData, newPost]};\r\n        \r\n        case SET_USER_PROFILE:\r\n            return {...state, userProfile: action.userProfile};\r\n        case SET_STATUS:\r\n            return {...state, status: action.status}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost =  (newPostItem) => { return { type: ADD_POST, newPostItem } }\r\n\r\nexport const setStatus = (status) => { return {type: SET_STATUS, status: status} }\r\n\r\nexport const setUserProfile = (userProfile) => { return {type: SET_USER_PROFILE, userProfile} }\r\n\r\nexport const setProfileThunk = (userId) => async (dispatch) => {\r\n        let data = await setUserProfiler(userId);\r\n\r\n        dispatch(setUserProfile(data));\r\n}\r\n\r\nexport const getStatusThunk = (userId) => async (dispatch) => {\r\n        let response= await userStatus.getUserStatus(userId);\r\n        \r\n        dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatusThunk = (status) => async (dispatch) => {\r\n        let response = await userStatus.updateUserStatus(status);\r\n    \r\n        if(response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }       \r\n}\r\n\r\nexport default profileReducer;","module.exports = __webpack_public_path__ + \"static/media/31nxvlzm90L._SY450_.76fdbddc.jpg\";"],"sourceRoot":""}