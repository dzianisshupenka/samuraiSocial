{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusHook.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/NewPostForm.jsx","components/Profile/MyPosts/NewPosts.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusHook","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","onDoubleClick","ProfileInfo","userProfile","className","profile","info","alt","avatar","src","photos","small","photoNull","margin","field","fullName","aboutMe","lookingForAJob","Preloader","maxLength","maxLengthCreator","NewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","NewPost","posts","formData","addPost","newPostItem","Post","React","memo","post","like","likesCount","NewPostContainer","connect","state","newPostText","profilePage","postData","map","p","key","id","Profile","content","ProfileContainer","userId","this","match","params","authUser","setProfileThunk","getStatusThunk","updateStatusThunk","Component","compose","auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.d42ffa4b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Profile_posts__Dg1oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__ES2yF\",\"margin\":\"ProfileInfo_margin__3WsfT\",\"field\":\"ProfileInfo_field__1Thrb\",\"img\":\"ProfileInfo_img__VD6Ko\",\"avatar\":\"ProfileInfo_avatar____F2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3Y551\",\"like\":\"Post_like__1FI2H\"};","import React, { useState } from \"react\"\r\nimport { useEffect } from \"react\";\r\n\r\nconst ProfileStatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect ( () => {\r\n      setStatus(props.status);\r\n    }, [props.status] )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n          {editMode ? (\r\n            <div>\r\n              <input onChange={onStatusChange} onBlur={deactivateEditMode} value={status} autoFocus = {true}/>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <span onDoubleClick={activateEditMode}>{props.status}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )\r\n}\r\nexport default ProfileStatusHook;","import React from 'react';\r\nimport profile from './ProfileInfo.module.css';\r\nimport Preloader from '../../../common/Preloader';\r\nimport photoNull from '../../../../img/31nxvlzm90L._SY450_.jpg';\r\nimport ProfileStatusHook from './ProfileStatusHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.userProfile) {\r\n        return <Preloader />\r\n    }\r\n    return(\r\n        <div>\r\n            {/* <div>\r\n                <img className={profile.img} alt='head' src='http://demo.themefreesia.com/arise/wp-content/uploads/sites/2/2015/11/cropped-header-img.png'/>\r\n            </div> */}\r\n            <div className={profile.info}>\r\n                <div><img alt='avatar' className={profile.avatar} \r\n                src={props.userProfile.photos.small===null ? photoNull : props.userProfile.photos.small}/></div>\r\n                <ProfileStatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n                <div className={profile.margin}>\r\n                    <span className={profile.field}>\r\n                        My name is: \r\n                    </span>  \r\n                    {props.userProfile.fullName} \r\n                </div>\r\n                <div className={profile.margin}>\r\n                    <span className={profile.field}>\r\n                        I think i: \r\n                    </span>  \r\n                    {props.userProfile.aboutMe}\r\n                </div>\r\n                <span className={`${profile.margin} ${profile.field}`}>{props.userProfile.lookingForAJob ? \"I want to work hard\" : \"I don't want to work\"}</span>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n    \r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validator';\r\nimport { Textarea } from '../../common/controls/FormControl';\r\n\r\nconst maxLength = maxLengthCreator(10);\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} placeholder='Post message' name='newPostItem' validate= {[required, maxLength]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostFormRedux = reduxForm({form:'newPost'})(NewPostForm);\r\n\r\nexport default NewPostFormRedux;","import React from 'react';\r\nimport profile from'./../Profile.module.css';\r\nimport NewPostFormRedux from './NewPostForm';\r\n\r\nconst NewPost = props => {\r\n  let onSubmit = (formData) => {\r\n    props.addPost(formData.newPostItem);\r\n    formData.newPostItem = '';\r\n  }\r\n\r\n    return(\r\n    <div>\r\n      <div className={profile.posts}>\r\n        <h3>My posts</h3>\r\n        <NewPostFormRedux onSubmit={onSubmit}/>\r\n      </div>\r\n      <div >\r\n        {props.posts}\r\n      </div>\r\n      \r\n    </div>)\r\n}\r\n\r\nexport default NewPost;","import React from 'react';\r\nimport post from './Post.module.css';\r\n\r\nconst Post =React.memo(props => {\r\n    return(\r\n            <div className={post.post}>\r\n                <img alt='avatar' src='https://images-na.ssl-images-amazon.com/images/I/31nxvlzm90L._SY450_.jpg'/>\r\n                {props.post} <span className={post.like}>Like {props.likesCount}</span>\r\n            </div>    \r\n    )\r\n}) \r\nexport default Post;","import React from 'react';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport NewPost from './NewPosts';\r\nimport Post from './Post/Post';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.postData.map(p => <Post post={p.post} key={p.id} likesCount={p.likesCount}/>)\r\n  }\r\n}\r\n\r\nconst NewPostContainer = connect(mapStateToProps, {addPost})(NewPost);\r\n\r\nexport default NewPostContainer;","import React from 'react';\r\nimport profile from'./Profile.module.css';\r\nimport ProfileInfo from './MyPosts/ProfileInfo/ProfileInfo';\r\nimport NewPostContainer from './MyPosts/NewPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return(\r\n      \r\n    <div className={profile.content}>\r\n\r\n      <ProfileInfo userProfile={props.userProfile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <NewPostContainer />\r\n      \r\n  </div>)\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {setProfileThunk, getStatusThunk, updateStatusThunk} from './../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount () {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authUser;\r\n        }\r\n        this.props.setProfileThunk(userId);\r\n        this.props.getStatusThunk(userId);\r\n    }\r\n    render () {\r\n        return (\r\n            <Profile {...this.props} userProfile={this.props.userProfile} \r\n                                     status={this.props.status} \r\n                                     updateStatus={this.props.updateStatusThunk}/>\r\n        )       \r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    status: state.profilePage.status,\r\n    authUser: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfileThunk, getStatusThunk, updateStatusThunk}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}